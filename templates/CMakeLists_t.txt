cmake_minimum_required(VERSION 3.0)

set(PROJECT_NAME "project_name")

project(${PROJECT_NAME})

set(CMAKE_CXX_FLAGS "-g -Wall")

set(COMMON_INCLUDES ${PROJECT_SOURCE_DIR}/project_source_dir)
include_directories(${COMMON_INCLUDES})
file(GLOB SRC_FILES ${PROJECT_SOURCE_DIR}/project_source_dir/*.cpp)
file(GLOB TEST_FILES ${PROJECT_SOURCE_DIR}/project_test_dir/*.cpp)
list(REMOVE_ITEM SRC_FILES ${PROJECT_SOURCE_DIR}/project_source_dir/main.cpp)

set(CMAKE_CXX_STANDARD 11)

add_library(${PROJECT_NAME}_lib ${SRC_FILES})
add_executable(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/project_source_dir/main.cpp)

target_link_libraries(${PROJECT_NAME} ${PROJECT_NAME}_lib)

option(BUILD_TESTS "Build all test." OFF)

if (BUILD_TESTS)
  add_subdirectory(project_extention_dir/googletest)

  enable_testing()

  include_directories(${gtest_SOURCE_DIR}/include ${gtest_SOURCE_DIR})

  add_executable(unit-test ${TEST_FILES})

  target_link_libraries(unit-test gtest gtest_main)
  target_link_libraries(unit-test ${PROJECT_NAME}_lib)
  
  add_test(unittest unit-test)

  set (CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/.travis/cmake)

  if (CMAKE_BUILD_TYPE STREQUAL "Coverage")
    include(CodeCoverage)
    setup_target_for_coverage(${PROJECT_NAME}_coverage unit-test coverage)

    SET(CMAKE_CXX_FLAGS "-g -O0 -fprofile-arcs -ftest-coverage")
    SET(CMAKE_C_FLAGS "-g -O0 -fprofile-arcs -ftest-coverage")
  endif() #CMAKE_BUILD_TYPE STREQUAL "Coverage"

endif()
